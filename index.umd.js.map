{"version":3,"sources":["src/utils.ts","src/seed.ts","src/index.ts","umd.js"],"names":["Uwuifier","uwuifier","other","Object","assign","window"],"mappings":";AAAA,aAqDA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAgB,EAAM,GAChB,IAAC,EAAO,OAAO,EAGf,GAAA,2DAA2D,KAAK,GAAQ,OAAO,EAG/E,GAAA,cAAc,KAAK,IAAU,4BAA4B,KAAK,GAAQ,OAAO,EAG3E,IAAA,EAAQ,EAAM,MAAM,wEAEtB,IAAC,EAAO,OAAO,EAEb,IAAA,EAA4B,CAAC,EAAM,GAAI,EAAM,GAAI,EAAM,IAAtD,EAAM,EAAA,GAAE,EAAS,EAAA,GAAE,EAAI,EAAA,GAG1B,KAAE,GAAU,EAAO,QAAU,EAAK,QAAU,GAAI,OAAO,EAGvD,GAAA,GAAa,EAAU,QACrB,GAAkB,IAAhB,EAAK,SAAgB,MAAM,KAAK,GAAQ,OAAO,OAGjD,GAAA,QAAQ,KAAK,GAAO,OAAO,EAI7B,QAAC,yBAAyB,KAAK,EAAO,eA5B5C,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,MAAA,QAAA,kBAAA,QAAA,qBAAA,QAAA,kBAAA,EAnDa,QAAA,aAAe,SAAC,EAAa,GAGjC,OAFP,EAAM,KAAK,KAAK,GAChB,EAAM,KAAK,MAAM,GACV,KAAK,MAAM,KAAK,UAAY,EAAM,EAAM,IAAM,GAG1C,QAAA,qBAAuB,SAAC,GAIP,IAHxB,IAAA,EAAe,EACf,EAAe,EAES,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAO,CAAxB,IAAA,EAAa,EAAA,GAClB,IAAI,OAAO,eAAe,KAAK,KACjC,IAEI,IAAkB,EAAc,eAClC,KAKC,OAAA,EAAe,GAGX,QAAA,kBAAoB,WACxB,OAAA,SAAC,EAAgC,GAClC,IAAA,EAAQ,EAAO,GACf,EAAM,EAgBV,OAAO,eAAe,EAAQ,EAAK,CACjC,IAfa,WAAM,OAAA,GAgBnB,IAda,SAAC,GAKV,GAJgB,WAAhB,EAAO,KACT,EAAM,OAAO,OAAO,GAAM,OAAO,SAAC,EAAG,GAAM,OAAA,EAAI,KAG7C,EAAO,GAAK,EAAM,GAAK,EAAO,GAAK,EAAM,EACrC,MAAA,IAAI,MAAS,EAAG,oDAGxB,EAAQ,GAMR,YAAY,EACZ,cAAc,MAKpB,QAAA,MAAA;;ACrDA,aAEa,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,EAAb,IAAA,EAAA,WA4CE,SAAA,EAAY,QAAA,IAAA,IAAA,EAAA,IACL,KAAA,MAAQ,EACR,KAAA,QAAU,KAAK,eAAe,GAiFvC,OA3HU,EAAA,UAAA,cAAR,SAAsB,EAAe,EAAa,GAE5C,GAAA,EAAM,EAAK,MAAM,IAAI,MAAM,qDAC1B,GAAI,IAAQ,EAAK,MAAM,IAAI,MAAM,oDAEjC,OAAY,IAAR,GAAqB,IAAR,EAAkB,GAG/B,EAAQ,IAAM,EAAM,GAAS,EAAS,GAGzC,EAAA,UAAA,eAAR,SAAuB,GAOhB,IAAA,IAAI,EAAI,EAAG,EAAI,WAAa,EAAK,OAAQ,EAAI,EAAK,OAAQ,IACP,GAArD,EAAI,KAAK,KAAK,EAAI,EAAK,WAAW,GAAI,cAAyB,GAAO,IAAM,GAExE,OAAA,WAGE,OAFP,EAAI,KAAK,KAAK,EAAK,IAAM,GAAK,YAC9B,EAAI,KAAK,KAAK,EAAK,IAAM,GAAK,aACtB,GAAK,IAAM,MAAQ,IAI/B,OAAA,eAAI,EAAA,UAAA,OAAI,CAQR,IAAA,WACS,OAAA,KAAK,OATd,IAAA,SAAS,GAEH,KAAK,QAAU,IAEd,KAAA,MAAQ,EACR,KAAA,QAAU,KAAK,eAAe,KAL7B,YAAA,EAhCG,cAAA,IAiDJ,EAAA,UAAA,OAAP,SAAc,EAAiB,GAEtB,YAFK,IAAA,IAAA,EAAA,QAAiB,IAAA,IAAA,EAAA,GAEtB,KAAK,cAAc,KAAK,QAAS,EAAK,IAGxC,EAAA,UAAA,UAAP,SAAiB,EAAiB,GACzB,YADQ,IAAA,IAAA,EAAA,QAAiB,IAAA,IAAA,EAAA,GACzB,KAAK,MAAM,KAAK,OAAO,EAAK,KAG9B,EAAA,UAAA,MAAP,SAAa,EAAiB,QAAjB,IAAA,IAAA,EAAA,QAAiB,IAAA,IAAA,EAAA,GACxB,IAAA,EAAI,KAAK,UACT,EAAI,KAAK,UACT,EAAI,KAAK,UACT,EAAI,KAAK,UAMT,GAJJ,KAAO,IACP,KAAO,GAGW,EAOX,OANP,EAAI,EAAK,IAAM,EACf,GAJA,KAAO,IAIG,GAAK,GAAM,EAIrB,GAHA,EAAK,GAAK,GAAO,IAAM,KAEvB,EAAK,GADL,GALA,KAAO,GAKE,EAAK,GACA,GACA,EACP,KAAK,eAAe,IAAM,GAAK,WAAY,EAAK,IAGlD,EAAA,UAAA,WAAP,SAAkB,EAAiB,QAAjB,IAAA,IAAA,EAAA,QAAiB,IAAA,IAAA,EAAA,GAC7B,IAAA,EAAI,KAAK,UAET,EAAK,GAAK,WAGP,OAFP,EAAI,KAAK,KAAK,EAAK,IAAM,GAAS,EAAJ,GAC9B,GAAK,EAAI,KAAK,KAAK,EAAK,IAAM,EAAQ,GAAJ,GAC3B,KAAK,gBAAgB,EAAK,IAAM,MAAS,GAAK,WAAY,EAAK,IAGjE,EAAA,UAAA,MAAP,SAAa,EAAiB,QAAjB,IAAA,IAAA,EAAA,QAAiB,IAAA,IAAA,EAAA,GACxB,IAAA,EAAI,KAAK,UACT,EAAI,KAAK,UACT,EAAI,KAAK,UACT,EAAI,KAAK,UAST,GAPJ,GAAK,KACL,GAAK,IAMe,GAAO,IAAM,GAAO,EAKjC,OAJP,EAAI,IANJ,GAAK,IAMU,GAAO,IAAM,IAC5B,EAAK,GANL,GAAK,GAMS,EACd,EAAK,EAAI,EAAK,EACd,EAAK,EAAI,EAAK,EACP,KAAK,eAAe,IAAM,GAAK,WAAY,EAAK,IAGlD,EAAA,UAAA,WAAP,SAAkB,EAAiB,QAAjB,IAAA,IAAA,EAAA,QAAiB,IAAA,IAAA,EAAA,GAC7B,IAAA,EAAI,KAAK,UACT,EAAI,KAAK,UACT,EAAI,KAAK,UACT,EAAI,KAAK,UAIT,EAAI,GAAK,EACX,EAAQ,EAAJ,EAQC,OAPP,EAA8B,GAAxB,GAAK,EAAM,IAAM,IAEvB,GAAK,EACL,GAFA,GAAK,EAGL,GAAK,EACL,GAAK,EACL,EAAK,GAAK,GAAO,IAAM,GAChB,KAAK,eAAe,IAAM,GAAK,WAAY,EAAK,IAE3D,EA/HA,GAAa,QAAA,KAAA;;ACFb,aAYa,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,IAAA,EAAA,MAAA,KAAA,YAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,EAAA,GAAA,YAAA,oBAAA,QAAA,YAAA,EAAA,WAAA,mBAAA,QAAA,SAAA,EAAA,QAAA,SAAA,EAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,GAAA,OAAA,EAAA,GAAA,GAAA,OAAA,eAAA,EAAA,EAAA,GAAA,GAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EAVb,IAAA,EAAA,QAAA,WAEA,EAAA,QAAA,UAQA,EAAA,WAoCE,SAAA,EACE,GAAA,IAAA,OAAA,IAAA,EAA2F,CACzF,OAAQ,CAAE,MAAO,IAAM,QAAS,KAAO,SAAU,IACjD,MAAO,GACP,aAAc,GACf,EAJC,EAAA,EAAA,OAAA,OAAM,IAAA,EAAG,CAAE,MAAO,IAAM,QAAS,KAAO,SAAU,IAAK,EAAE,EAAA,EAAA,MAAA,OAAK,IAAA,EAAG,EAAC,EAAE,EAAA,EAAA,aAAA,OAAY,IAAA,EAAG,EAAC,EApCjF,KAAA,MAAkB,CAAC,UAAY,QAAS,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAM,MACxF,KAAA,aAAyB,CAAC,KAAM,MAAO,OAAQ,OAAQ,QACvD,KAAA,QAAoB,CACzB,YACA,qBACA,UACA,YACA,WACA,WACA,cACA,cACA,eACA,eACA,iBACA,mBACA,oBACA,oBACA,qBAEK,KAAA,OAAS,CACd,CAAC,WAAY,KACb,CAAC,WAAY,KACb,CAAC,cAAe,QAChB,CAAC,cAAe,QAChB,CAAC,cAAe,QAChB,CAAC,OAAQ,OAiBJ,KAAA,gBAAkB,MAAA,EAAA,EAAU,CAC/B,MAAO,IACP,QAAS,KACT,SAAU,IAEP,KAAA,eAAiB,MAAA,EAAA,EAAS,GAC1B,KAAA,sBAAwB,MAAA,EAAA,EAAgB,EAgHjD,OA7GS,EAAA,UAAA,YAAP,SAAmB,GAAnB,IAAA,EAAA,KAoBS,OAnBO,EAAS,MAAM,KAG1B,IAAI,SAAC,GACA,GAAA,EAAA,MAAM,GAAO,OAAO,EAIS,IAF3B,IAAA,EAAO,IAAI,EAAA,KAAK,GAEW,EAAA,EAAA,EAAA,EAAK,OAAL,EAAA,EAAA,OAAA,IAAa,CAAnC,IAAA,EAAA,EAAA,GAAC,EAAO,EAAA,GAAE,EAAO,EAAA,GAEtB,EAAK,SAAW,EAAK,iBAEzB,EAAO,EAAK,QAAQ,EAAS,IAGxB,OAAA,IAER,KAAK,MAKH,EAAA,UAAA,aAAP,SAAoB,GAApB,IAAA,EAAA,KACQ,EAAQ,EAAS,MAAM,KAEvB,EAAgB,KAAK,gBAAgB,MACrC,EAAkB,KAAK,gBAAgB,QAAU,EACjD,EAAmB,KAAK,gBAAgB,SAAW,EAgDlD,OA9CkB,EACtB,IAAI,SAAC,EAAM,GACJ,IAAA,EAAO,IAAI,EAAA,KAAK,GAChB,EAAS,EAAK,SAEd,EAAiB,EAAK,GAExB,GAAA,GAAU,GAAiB,EAAK,MAElC,GAAQ,IAAM,EAAK,MAAM,EAAK,UAAU,EAAG,EAAK,MAAM,OAAS,IAC/D,SACK,GAAI,GAAU,GAAmB,EAAK,QAE3C,GAAQ,IAAM,EAAK,QAAQ,EAAK,UAAU,EAAG,EAAK,QAAQ,OAAS,IACnE,SACK,GAAI,GAAU,IAAqB,EAAA,MAAM,GAAO,CAE/C,IAAA,EAAU,EAAK,UAAU,EAAG,GAE3B,OAAC,EAAiB,KAAK,OAAO,GAAW,EAGzC,SAAA,IAEH,GAAA,IAAmB,EAAe,iBAElC,EAAA,qBAAqB,GAAQ,IAG7B,GAAU,IAAV,EAEF,EAAO,EAAe,cAAgB,EAAK,MAAM,OAC5C,CACC,IAAA,EAAe,EAAM,EAAQ,GAC7B,EAAuB,EAAa,EAAa,OAAS,GAG5D,IAFgC,IAAI,OAAO,YAAY,KAAK,GAE9B,OAClC,EAAO,EAAe,cAAgB,EAAK,MAAM,IAI9C,OAAA,IAER,KAAK,MAKH,EAAA,UAAA,mBAAP,SAA0B,GAA1B,IAAA,EAAA,KACQ,EAAQ,EAAS,MAAM,KACvB,EAAU,IAAI,OAAO,UAgBpB,OAdkB,EACtB,IAAI,SAAC,GACE,IAAA,EAAO,IAAI,EAAA,KAAK,GAGlB,OAAC,EAAQ,KAAK,IAAS,EAAK,SAAW,EAAK,sBAA8B,GAE9E,EAAO,EAAK,QAAQ,EAAS,IAC7B,GAAQ,EAAK,aAAa,EAAK,UAAU,EAAG,EAAK,aAAa,OAAS,OAIxE,KAAK,MAKH,EAAA,UAAA,eAAP,SAAsB,GAChB,IAAA,EAAiB,EAMd,OAJP,EAAiB,KAAK,YAAY,GAClC,EAAiB,KAAK,mBAAmB,GACzC,EAAiB,KAAK,aAAa,IA/HrC,EAAA,CADC,EAAA,qBACD,EAAA,UAAA,uBAAA,GAEA,EAAA,CADC,EAAA,qBACD,EAAA,UAAA,sBAAA,GAEA,EAAA,CADC,EAAA,qBACD,EAAA,UAAA,6BAAA,GA+HF,EAjKA,GAAa,QAAA,SAAA;;ACTb,aAHA,IAAA,EAAA,EAAA,QAAA,UAGA,SAAA,IAAA,GAAA,mBAAA,QAAA,OAAA,KAAA,IAAA,EAAA,IAAA,QAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,GAAA,OAAA,GAAA,iBAAA,GAAA,mBAAA,EAAA,MAAA,CAAA,QAAA,GAAA,IAAA,EAAA,IAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,MAAA,EAAA,MAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,EAAA,EAAA,GAAA,EAAA,QAAA,IAAA,GAAA,OAAA,UAAA,qBAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,MAAA,EAAA,MAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,KAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,EAAA,EAAA,GAAA,EAAA,QAAA,IAAA,IAAA,EAAA,GAAA,EAAA,IAAA,OAAA,EAFQA,IAAAA,EAAuBC,EAAvBD,SAAaE,EAAUD,EAAAA,EAAAA,CAAAA,aAC/BE,OAAOC,OAAOJ,EAAUE,GACxBC,OAAOC,OAAOC,OAAQ,CAAEL,SAAAA","file":"index.umd.js","sourceRoot":"..","sourcesContent":["'use strict';\n\nexport const getRandomInt = (min: number, max: number) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport const getCapitalPercentage = (input: string): number => {\n  let totalLetters = 0;\n  let upperLetters = 0;\n\n  for (const currentLetter of input) {\n    if (new RegExp(/^[a-zA-Z]+$/).test(currentLetter)) {\n      totalLetters++;\n\n      if (currentLetter === currentLetter.toUpperCase()) {\n        upperLetters++;\n      }\n    }\n  }\n\n  return upperLetters / totalLetters;\n};\n\nexport const InitModifierParam = () => {\n  return (target: { [key: string]: any }, key: string) => {\n    let value = target[key];\n    let sum = 0;\n\n    const getter = () => value;\n\n    const setter = (next: number | object) => {\n      if (typeof next === 'object') {\n        sum = Object.values(next).reduce((a, b) => a + b);\n      }\n\n      if (next < 0 || sum < 0 || next > 1 || sum > 1) {\n        throw new Error(`${key} modifier value must be a number between 0 and 1`);\n      }\n\n      value = next;\n    };\n\n    Object.defineProperty(target, key, {\n      get: getter,\n      set: setter,\n      enumerable: true,\n      configurable: true\n    });\n  };\n};\n\nexport function isUri(value: string): boolean {\n  if (!value) return false;\n\n  // check for illegal characters\n  if (/[^a-z0-9\\:\\/\\?\\#\\[\\]\\@\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=\\.\\-\\_\\~\\%]/i.test(value)) return false;\n\n  // check for hex escapes that aren't complete\n  if (/%[^0-9a-f]/i.test(value) || /%[0-9a-f](:?[^0-9a-f]|$)/i.test(value)) return false;\n\n  // directly from RFC 3986\n  const split = value.match(/(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*)(?:\\?([^#]*))?(?:#(.*))?/);\n\n  if (!split) return false;\n\n  const [scheme, authority, path] = [split[1], split[2], split[3]];\n\n  // scheme and path are required, though the path can be empty\n  if (!(scheme && scheme.length && path.length >= 0)) return false;\n\n  // if authority is present, the path must be empty or begin with a /\n  if (authority && authority.length) {\n    if (!(path.length === 0 || /^\\//.test(path))) return false;\n  } else {\n    // if authority is not present, the path must not start with //\n    if (/^\\/\\//.test(path)) return false;\n  }\n\n  // scheme must begin with a letter, then consist of letters, digits, +, ., or -\n  if (!/^[a-z][a-z0-9\\+\\-\\.]*$/.test(scheme.toLowerCase())) return false;\n\n  return true;\n}\n","// This random seed package was previously publicated on the Deno site as a standalone package but I've decided to just integrate it into the Uwuifier\n\nexport class Seed {\n  private _seed: string;\n  private _seeder: () => number;\n\n  private generateRange(value: number, min: number, max: number): number {\n    // Make sure the minimum and maximum values are correct\n    if (min > max) throw new Error('The minimum value must be below the maximum value');\n    else if (min === max) throw new Error('The minimum value cannot equal the maximum value');\n    // Everything is run through the map value so if the defaults haven't changed just return\n    else if (min === 0 && max === 1) return value;\n\n    // Actually map the number range\n    return ((value - 0) * (max - min)) / (1 - 0) + min;\n  }\n\n  private generateSeeder(seed: string): () => number {\n    // https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript/47593316#47593316\n    // This is a seeded random generator\n    // Returns a function which returns a value between 0 and 0xFFFFFFFF (32-bits)\n\n    // Had to use a eslint ignore here since var has different scoping than let\n    // tslint:disable-next-line\n    for (var i = 0, h = 1779033703 ^ seed.length; i < seed.length; i++)\n      (h = Math.imul(h ^ seed.charCodeAt(i), 3432918353)), (h = (h << 13) | (h >>> 19));\n\n    return () => {\n      h = Math.imul(h ^ (h >>> 16), 2246822507);\n      h = Math.imul(h ^ (h >>> 13), 3266489909);\n      return (h ^= h >>> 16) >>> 0;\n    };\n  }\n\n  set seed(seed: string) {\n    // If the seed hasn't changed just return\n    if (this._seed === seed) return;\n\n    this._seed = seed;\n    this._seeder = this.generateSeeder(seed);\n  }\n\n  get seed() {\n    return this._seed;\n  }\n\n  constructor(seed: string = '') {\n    this._seed = seed;\n    this._seeder = this.generateSeeder(seed);\n  }\n\n  public random(min: number = 0, max: number = 1): number {\n    // Use the default sfc32 random generator\n    return this.generateRange(this.sfc32(), min, max);\n  }\n\n  public randomInt(min: number = 0, max: number = 1): number {\n    return Math.round(this.random(min, max));\n  }\n\n  public sfc32(min: number = 0, max: number = 1): number {\n    let a = this._seeder();\n    let b = this._seeder();\n    let c = this._seeder();\n    let d = this._seeder();\n\n    a >>>= 0;\n    b >>>= 0;\n    c >>>= 0;\n    d >>>= 0;\n    let t = (a + b) | 0;\n    a = b ^ (b >>> 9);\n    b = (c + (c << 3)) | 0;\n    c = (c << 21) | (c >>> 11);\n    d = (d + 1) | 0;\n    t = (t + d) | 0;\n    c = (c + t) | 0;\n    return this.generateRange((t >>> 0) / 4294967296, min, max);\n  }\n\n  public mulberry32(min: number = 0, max: number = 1): number {\n    let a = this._seeder();\n\n    let t = (a += 0x6d2b79f5);\n    t = Math.imul(t ^ (t >>> 15), t | 1);\n    t ^= t + Math.imul(t ^ (t >>> 7), t | 61);\n    return this.generateRange(((t ^ (t >>> 14)) >>> 0) / 4294967296, min, max);\n  }\n\n  public jsf32(min: number = 0, max: number = 1): number {\n    let a = this._seeder();\n    let b = this._seeder();\n    let c = this._seeder();\n    let d = this._seeder();\n\n    a |= 0;\n    b |= 0;\n    c |= 0;\n    d |= 0;\n\n    // Using eslint here since this stolen code is definitely not optimized for readability\n    // tslint:disable-next-line\n    let t = (a - ((b << 27) | (b >>> 5))) | 0;\n    a = b ^ ((c << 17) | (c >>> 15));\n    b = (c + d) | 0;\n    c = (d + t) | 0;\n    d = (a + t) | 0;\n    return this.generateRange((d >>> 0) / 4294967296, min, max);\n  }\n\n  public xoshiro128(min: number = 0, max: number = 1): number {\n    let a = this._seeder();\n    let b = this._seeder();\n    let c = this._seeder();\n    let d = this._seeder();\n\n    // Using eslint here since this stolen code is definitely not optimized for readability\n    // tslint:disable-next-line\n    let t = b << 9,\n      r = a * 5;\n    r = ((r << 7) | (r >>> 25)) * 9;\n    c ^= a;\n    d ^= b;\n    b ^= c;\n    a ^= d;\n    c ^= t;\n    d = (d << 11) | (d >>> 21);\n    return this.generateRange((r >>> 0) / 4294967296, min, max);\n  }\n}\n","'use strict';\n\nimport { InitModifierParam, getCapitalPercentage, isUri } from './utils';\n\nimport { Seed } from './seed';\n\ninterface SpacesModifier {\n  faces: number;\n  actions: number;\n  stutters: number;\n}\n\nexport class Uwuifier {\n  public faces: string[] = [`(・\\`ω´・)`, `;;w;;`, 'OwO', `UwU`, `>w<`, `^w^`, `ÚwÚ`, '^-^', `:3`, `x3`];\n  public exclamations: string[] = [`!?`, `?!!`, `?!?1`, `!!11`, `?!?!`];\n  public actions: string[] = [\n    `*blushes*`,\n    `*whispers to self*`,\n    '*cries*',\n    '*screams*',\n    '*sweats*',\n    '*twerks*',\n    `*runs away*`,\n    '*screeches*',\n    '*walks away*',\n    `*sees bulge*`,\n    '*looks at you*',\n    `*notices buldge*`,\n    `*starts twerking*`,\n    `*huggles tightly*`,\n    `*boops your nose*`\n  ];\n  public uwuMap = [\n    [/(?:r|l)/g, `w`],\n    [/(?:R|L)/g, `W`],\n    [/n([aeiou])/g, `ny$1`],\n    [/N([aeiou])/g, `Ny$1`],\n    [/N([AEIOU])/g, `Ny$1`],\n    [/ove/g, `uv`]\n  ];\n\n  @InitModifierParam()\n  private _spacesModifier: SpacesModifier;\n  @InitModifierParam()\n  private _wordsModifier: number;\n  @InitModifierParam()\n  private _exclamationsModifier: number;\n\n  constructor(\n    { spaces = { faces: 0.05, actions: 0.075, stutters: 0.1 }, words = 1, exclamations = 1 } = {\n      spaces: { faces: 0.05, actions: 0.075, stutters: 0.1 },\n      words: 0.7,\n      exclamations: 1\n    }\n  ) {\n    this._spacesModifier = spaces ?? {\n      faces: 0.05,\n      actions: 0.075,\n      stutters: 0.1\n    };\n    this._wordsModifier = words ?? 0.7;\n    this._exclamationsModifier = exclamations ?? 1;\n  }\n\n  public uwuifyWords(sentence: string): string {\n    const words = sentence.split(` `);\n\n    const uwuifiedSentence = words\n      .map((word) => {\n        if (isUri(word)) return word;\n\n        const seed = new Seed(word);\n\n        for (const [oldWord, newWord] of this.uwuMap) {\n          // Generate a random value for every map so words will be partly uwuified instead of not at all\n          if (seed.random() > this._wordsModifier) continue;\n\n          word = word.replace(oldWord, newWord as string);\n        }\n\n        return word;\n      })\n      .join(' ');\n\n    return uwuifiedSentence;\n  }\n\n  public uwuifySpaces(sentence: string): string {\n    const words = sentence.split(` `);\n\n    const faceThreshold = this._spacesModifier.faces;\n    const actionThreshold = this._spacesModifier.actions + faceThreshold;\n    const stutterThreshold = this._spacesModifier.stutters + actionThreshold;\n\n    const uwuifiedSentence = words\n      .map((word, index) => {\n        const seed = new Seed(word);\n        const random = seed.random();\n\n        const firstCharacter = word[0];\n\n        if (random <= faceThreshold && this.faces) {\n          // Add random face before the word\n          word += ' ' + this.faces[seed.randomInt(0, this.faces.length - 1)];\n          checkCapital();\n        } else if (random <= actionThreshold && this.actions) {\n          // Add random action before the word\n          word += ' ' + this.actions[seed.randomInt(0, this.actions.length - 1)];\n          checkCapital();\n        } else if (random <= stutterThreshold && !isUri(word)) {\n          // Add stutter with a length between 0 and 2\n          const stutter = seed.randomInt(0, 2);\n\n          return (firstCharacter + '-').repeat(stutter) + word;\n        }\n\n        function checkCapital() {\n          // Check if we should remove the first capital letter\n          if (firstCharacter !== firstCharacter.toUpperCase()) return;\n          // if word has higher than 50% upper case\n          if (getCapitalPercentage(word) > 0.5) return;\n\n          // If it's the first word\n          if (index === 0) {\n            // Remove the first capital letter\n            word = firstCharacter.toLowerCase() + word.slice(1);\n          } else {\n            const previousWord = words[index - 1];\n            const previousWordLastChar = previousWord[previousWord.length - 1];\n            const prevWordEndsWithPunctuation = new RegExp('[.!?\\\\-]').test(previousWordLastChar);\n\n            if (!prevWordEndsWithPunctuation) return;\n            word = firstCharacter.toLowerCase() + word.slice(1);\n          }\n        }\n\n        return word;\n      })\n      .join(' ');\n\n    return uwuifiedSentence;\n  }\n\n  public uwuifyExclamations(sentence: string): string {\n    const words = sentence.split(` `);\n    const pattern = new RegExp('[?!]+$');\n\n    const uwuifiedSentence = words\n      .map((word) => {\n        const seed = new Seed(word);\n\n        // If there are no exclamations return\n        if (!pattern.test(word) || seed.random() > this._exclamationsModifier) return word;\n\n        word = word.replace(pattern, ``);\n        word += this.exclamations[seed.randomInt(0, this.exclamations.length - 1)];\n\n        return word;\n      })\n      .join(' ');\n\n    return uwuifiedSentence;\n  }\n\n  public uwuifySentence(sentence: string): string {\n    let uwuifiedString = sentence;\n\n    uwuifiedString = this.uwuifyWords(uwuifiedString);\n    uwuifiedString = this.uwuifyExclamations(uwuifiedString);\n    uwuifiedString = this.uwuifySpaces(uwuifiedString);\n\n    return uwuifiedString;\n  }\n}\n","import * as uwuifier from './src'\nconst { Uwuifier, ...other } = uwuifier\nObject.assign(Uwuifier, other)\nObject.assign(window, { Uwuifier })"]}